{"version":3,"sources":["context/Modal.js","store/csrf.js","store/session.js","components/SignupFormPage/index.js","components/Navigation/ProfileButton.js","components/LoginFormModal/LoginForm.js","components/LoginFormModal/index.js","components/Navigation/index.js","App.js","store/index.js","index.js"],"names":["ModalContext","React","createContext","ModalProvider","children","modalRef","useRef","useState","value","setValue","useEffect","current","Provider","ref","Modal","onClose","modalNode","useContext","ReactDOM","createPortal","id","onClick","fetch","url","a","options","method","headers","toUpperCase","Cookies","get","window","res","contentType","includes","json","data","status","SET_USER","REMOVE_USER","setUser","user","type","payload","initialState","reducer","state","action","Object","assign","SignupFormPage","dispatch","useDispatch","sessionUser","useSelector","session","email","setEmail","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","to","onSubmit","e","preventDefault","body","JSON","stringify","response","catch","map","error","idx","onChange","target","required","ProfileButton","showMenu","setShowMenu","closeMenu","document","addEventListener","removeEventListener","className","LoginForm","credential","setCredential","sessionActions","LoginFormModal","showModal","setShowModal","Navigation","sessionLinks","isLoaded","exact","App","enhancer","setIsLoaded","then","path","rootReducer","combineReducers","applyMiddleware","thunk","store","preloadedState","createStore","configureStore","Root","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f41f6768.chunk.js","sourcesContent":["import React, { useContext, useRef, useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nconst ModalContext = React.createContext();\n\nexport function ModalProvider({ children }) {\n  const modalRef = useRef();\n  const [value, setValue] = useState();\n\n  useEffect(() => {\n    setValue(modalRef.current);\n  }, [])\n\n  return (\n    <>\n      <ModalContext.Provider value={value}>\n        {children}\n      </ModalContext.Provider>\n      <div ref={modalRef} />\n    </>\n  );\n}\n\nexport function Modal({ onClose, children }) {\n  const modalNode = useContext(ModalContext);\n  if (!modalNode) return null;\n\n  return ReactDOM.createPortal(\n    <div id=\"modal\">\n      <div id=\"modal-background\" onClick={onClose} />\n      <div id=\"modal-content\">\n        {children}\n      </div>\n    </div>,\n    modalNode\n  );\n}","import Cookies from 'js-cookie';\n\nexport async function fetch(url, options = {}) {\n  // set options.method to 'GET' if there is no method\n  options.method = options.method || 'GET';\n  // set options.headers to an empty object if there is no headers\n  options.headers = options.headers || {};\n\n  // if the options.method is not 'GET', then set the \"Content-Type\" header to\n  // \"application/json\", and set the \"CSRF-TOKEN\" header to the value of the\n  // \"XSRF-TOKEN\" cookie\n  if (options.method.toUpperCase() !== 'GET') {\n    options.headers['Content-Type'] =\n      options.headers['Content-Type'] || 'application/json';\n    options.headers['XSRF-Token'] = Cookies.get('XSRF-TOKEN');\n  }\n  // call the default window's fetch with the url and the options passed in\n  const res = await window.fetch(url, options);\n\n  // if the response's body is JSON, then parse the JSON body and set it to a\n  // key of `data` on the response\n  const contentType = res.headers.get('content-type');\n  if (contentType && contentType.includes('application/json')) {\n    const data = await res.json();\n    res.data = data;\n  }\n\n  // if the response status code is 400 or above, then throw an error with the\n  // error being the response\n  if (res.status >= 400) throw res;\n\n  // if the response status code is under 400, then return the response to the\n  // next promise chain\n  return res;\n}\n\nexport function restoreCSRF() {\n  return fetch('/api/csrf/restore');\n}\n","import { fetch } from './csrf.js';\n\nconst SET_USER = 'session/setUser';\nconst REMOVE_USER = 'session/removeUser';\n\nconst setUser = (user) => ({\n  type: SET_USER,\n  payload: user\n});\n\nconst removeUser = () => ({\n  type: REMOVE_USER\n});\n\nexport const login = ({ credential, password }) => async (dispatch) => {\n  const res = await fetch('/api/session', {\n    method: 'POST',\n    body: JSON.stringify({ credential, password })\n  });\n  dispatch(setUser(res.data.user));\n  return res;\n};\n\nexport const restoreUser = () => async (dispatch) => {\n  const res = await fetch('/api/session');\n  dispatch(setUser(res.data.user));\n  return res;\n};\n\nexport const signup = (user) => async (dispatch) => {\n  const { username, email, password } = user;\n  const response = await fetch('/api/users', {\n    method: 'POST',\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n\n  dispatch(setUser(response.data.user));\n  return response;\n};\n\nexport const logout = () => async (dispatch) => {\n  const response = await fetch('/api/session', {\n    method: 'DELETE'\n  });\n  dispatch(removeUser());\n  return response;\n};\n\nconst initialState = { user: null };\n\nfunction reducer(state = initialState, action) {\n  let newState;\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state, { user: action.payload });\n      return newState;\n    case REMOVE_USER:\n      newState = Object.assign({}, state, { user: null });\n      return newState;\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as sessionActions from \"../../store/session\";\nimport './SignupForm.css';\n\nfunction SignupFormPage() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  if (sessionUser) return <Redirect to=\"/\" />;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (password === confirmPassword) {\n      setErrors([]);\n      return dispatch(sessionActions.signup({ email, username, password }))\n        .catch(res => {\n          if (res.data && res.data.errors) setErrors(res.data.errors);\n        });\n    }\n    return setErrors(['Confirm Password field must be the same as the Password field']);\n  };\n\n  return (\n    <>\n      <h1>Sign Up</h1>\n      <form onSubmit={handleSubmit}>\n        <ul>\n          {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n        </ul>\n        <label>\n          Email\n          <input\n            type=\"text\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </label>\n        <label>\n          Username\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n        </label>\n        <label>\n          Password\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </label>\n        <label>\n          Confirm Password\n          <input\n            type=\"password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n          />\n        </label>\n        <button type=\"submit\">Sign Up</button>\n      </form>\n    </>\n  );\n}\n\nexport default SignupFormPage;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport * as sessionActions from '../../store/session';\n\nfunction ProfileButton({ user }) {\n  const dispatch = useDispatch();\n  const [showMenu, setShowMenu] = useState(false);\n  \n  const openMenu = () => {\n    if (showMenu) return;\n    setShowMenu(true);\n  };\n  \n  useEffect(() => {\n    if (!showMenu) return;\n\n    const closeMenu = () => {\n      setShowMenu(false);\n    };\n\n    document.addEventListener('click', closeMenu);\n  \n    return () => document.removeEventListener(\"click\", closeMenu);\n  }, [showMenu]);\n\n  const logout = (e) => {\n    e.preventDefault();\n    dispatch(sessionActions.logout());\n  };\n\n  return (\n    <>\n      <button onClick={openMenu}>\n        <i className=\"fas fa-user-circle\" />\n      </button>\n      {showMenu && (\n        <ul className=\"profile-dropdown\">\n          <li>{user.username}</li>\n          <li>{user.email}</li>\n          <li>\n            <button onClick={logout}>Log Out</button>\n          </li>\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default ProfileButton;\n","import React, { useState } from \"react\";\nimport * as sessionActions from \"../../store/session\";\nimport { useDispatch } from \"react-redux\";\nimport \"./LoginForm.css\";\n\nfunction LoginForm() {\n  const dispatch = useDispatch();\n  const [credential, setCredential] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({ credential, password })).catch(\n      (res) => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      }\n    );\n  };\n\n  return (\n    <>\n      <h1>Log In</h1>\n      <form onSubmit={handleSubmit}>\n        <ul>\n          {errors.map((error, idx) => (\n            <li key={idx}>{error}</li>\n          ))}\n        </ul>\n        <label>\n          Username or Email\n          <input\n            type=\"text\"\n            value={credential}\n            onChange={(e) => setCredential(e.target.value)}\n            required\n          />\n        </label>\n        <label>\n          Password\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </label>\n        <button type=\"submit\">Log In</button>\n      </form>\n    </>\n  );\n}\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { Modal } from '../../context/Modal';\nimport LoginForm from './LoginForm';\n\nfunction LoginFormModal() {\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <button onClick={() => setShowModal(true)}>Log In</button>\n      {showModal && (\n        <Modal onClose={() => setShowModal(false)}>\n          <LoginForm />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default LoginFormModal;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ProfileButton from './ProfileButton';\nimport LoginFormModal from '../LoginFormModal';\nimport './Navigation.css';\n\nfunction Navigation({ isLoaded }){\n  const sessionUser = useSelector(state => state.session.user);\n\n  let sessionLinks;\n  if (sessionUser) {\n    sessionLinks = (\n      <ProfileButton user={sessionUser} />\n    );\n  } else {\n    sessionLinks = (\n      <>\n        <LoginFormModal />\n        <NavLink to=\"/signup\">Sign Up</NavLink>\n      </>\n    );\n  }\n\n  return (\n    <ul>\n      <li>\n        <NavLink exact to=\"/\">Home</NavLink>\n        {isLoaded && sessionLinks}\n      </li>\n    </ul>\n  );\n}\n\nexport default Navigation;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport SignupFormPage from \"./components/SignupFormPage\";\n// import LoginFormPage from \"./components/LoginFormPage\";\nimport * as sessionActions from \"./store/session\";\nimport Navigation from \"./components/Navigation\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  return (\n    <>\n      <Navigation isLoaded={isLoaded} />\n      {isLoaded && (\n        <Switch>\n          {/* <Route path=\"/login\" >\n            <LoginFormPage />\n          </Route> */}\n          <Route path=\"/signup\">\n            <SignupFormPage />\n          </Route>\n        </Switch>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport session from './session'\n\nconst rootReducer = combineReducers({\n  session\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n","import React from 'react';\n\nimport './index.css';\n\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ModalProvider } from './context/Modal';\nimport App from './App';\n\nimport configureStore from './store';\nimport { restoreCSRF, fetch } from './store/csrf';\nimport * as sessionActions from './store/session';\n\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== \"production\") {\n  restoreCSRF();\n\n  window.csrfFetch = fetch;\n  window.store = store;\n  window.sessionActions = sessionActions;\n}\n\n// const Carrot = () => (\n//   <div style={{ color: \"orange\", fontSize: \"100px\" }}>\n//     <i className=\"fas fa-carrot\"></i>\n//   </div>\n// );\n\nfunction Root() {\n  return (\n    <ModalProvider>\n      <Provider store={store}>\n        <BrowserRouter>\n          <App />\n          {/* <Carrot /> */}\n        </BrowserRouter>\n      </Provider>\n    </ModalProvider>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}